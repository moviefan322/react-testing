[{"content":"import { render, screen } from '@testing-library/react';\n\nfunction RoleExample() {\n  return (\n    <div>\n      <a href=\"/\">Link</a>\n      <button>button</button>\n      <footer>ContentInfo</footer>\n      <h1>Heading</h1>\n      <header>Banner</header>\n      <img alt=\"description\" /> img\n      <input type=\"checkbox\" /> checkbox\n      <input type=\"radio\" /> radio\n      <input type=\"number\" /> spinbutton\n      <input type=\"text\" /> textbox\n      <li>ListItem</li>\n      <ul>List</ul>\n    </div>\n  );\n}\n\nrender(<RoleExample />);","type":"code","id":"xthrs"},{"content":"test('can find elements by role', () => {\n  render(<RoleExample />)\n\n  const roles = [\n    'link',\n    'button',\n    'contentinfo',\n    'heading',\n    'banner',\n    'img',\n    'checkbox',\n    'spinbutton',\n    'radio',\n    'textbox',\n    'listitem',\n    'list'\n  ];\n\n  for (let role of roles) {\n    const el = screen.getByRole(role)\n\n    expect(el).toBeInTheDocument()\n  }\n  })","type":"code","id":"c5gln"},{"content":"function AccessibleName() {\n  return (\n    <div>\n    <button>Submit</button>\n    <button>Cancel</button>\n    </div>\n  )\n}\n\nrender(<AccessibleName />)","type":"code","id":"a5kzr"},{"content":"test('can select by accessible name', () => {\n  render(<AccessibleName />);\n\n  const submitButton = screen.getByRole('button', { name: /submit/i });\n\n  const cancelButton = screen.getByRole('button', { name: /cancel/i });\n\n  expect(submitButton).toBeInTheDocument();\n\n  expect(cancelButton).toBeInTheDocument();\n});","type":"code","id":"mpr53"},{"content":"function MoreNames() {\n  return (\n    <div>\n    <label htmlFor=\"email\">Email</label>\n    <input id=\"email\" />\n    <label htmlFor=\"search\">Search</label>\n    <input id=\"search\" />\n    </div>\n  )\n}\n\nrender(<MoreNames />)","type":"code","id":"v1i04"},{"content":"test('shows an email and search input', () => {\n  render(<MoreNames />);\n\n  const emailInput = screen.getByRole('textbox', { name: /email/i });\n\n  const searchInput = screen.getByRole('textbox', { name: /search/i });\n\n  expect(emailInput).toBeInTheDocument()\n\n  expect(searchInput).toBeInTheDocument()\n});","type":"code","id":"cidzz"},{"content":"function IconButtons() {\n  return (\n    <div>\n      <button aria-label=\"sign in\">\n        <svg />\n      </button>\n      <button aria-label=\"sign out\">\n        <svg />\n      </button>\n    </div>\n  );\n}\n\nrender(<IconButtons />)","type":"code","id":"phl0w"},{"content":"test('find elements based on label', () => {\n  render(<IconButtons />)\n\n  const signInButton = screen.getByRole('button', { name: /sign in/i})\n\n  const signOutButton = screen.getByRole('button', { name: /sign out/i})\n\n  expect(signInButton).toBeInTheDocument()\n\n  expect(signOutButton).toBeInTheDocument()\n})","type":"code","id":"fentn"}]